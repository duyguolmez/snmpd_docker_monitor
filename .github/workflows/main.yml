name: Generate Samba Debian Package

on:
  push:
    branches: ["main"]
    

env:
  IMAGE_NAME: generate_snmpd_docker_monitor_deb

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
    
  build:
    needs: prepare

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v1
        
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d-%H%M%S')"

      - name: Build Deb Package For Deb
        id: build_deb_package
        run: |
          build_number="${{ github.run_number }}"
          mkdir opt build_src
          cp -r src/* build_src/
          cp -r build/debian build_src/DEBIAN

          touch build_src/DEBIAN/md5sums
          touch build_src/DEBIAN/control
          find ./ -type f -exec md5sum {} \; > build_src/DEBIAN/md5sums
          size=$(du -s build_src | cut -f 1)

          echo "Package: snmpd-docker-monitor
          Version: $build_number
          Installed-Size: $size
          Priority: optional
          Maintainer: Duygu Ã–lmez <zeynepduyguolmez@gmail.com>
          Section: admin,monitor
          Depends: snmpd
          Date : $GITHUB_RUN_ID
          Architecture: amd64
          Description: Deb package for monitoring docker with snmp
          " > build_src/DEBIAN/control
          chmod 755 build_src/DEBIAN/postinst

          . build/version
          ubuntu_package_name="snmpd-docker-monitor-$ver-$build_number"
          mv build_src "$package_name"
          dpkg-deb -Zgzip --build "$package_name"

          echo ::set-output name=path_deb::$(pwd)/"$package_name".deb
          echo ::set-output name=filename_deb::"$package_name".deb

      - name: Create Release
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release.${{ github.run_number }}
          release_name: "Release ${{ github.run_number }}"
          body: |
            Changes in this Release
            
            - ${{ github.event.commits[0].message }}
          draft: false
          prerelease: false

      - name: Upload the Debian package to Release Assets
        id: upload-release-asset-2
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.build_deb_package.outputs.path_deb }}
          asset_name: ${{ steps.build_deb_package.outputs.filename_deb }}
          asset_content_type: application/vnd.debian.binary-package
